# Agent’s log file. To write log to syslog (or Event Log on Windows), use {syslog} as file name.
LogFile=/dev/stdout



# Define action, which can be later executed by management server. Parameters to the action can be provided from the server. They can be accessed as $1, $2… variables. On Windows platform system process execution API’s CreateProcess() is used to run the command, it will search in PATH, but the command should be with file extension, e.g. command.exe.
#Action=

# Same as Action, but on Windows platform agent will use shell to execute command instead of normal process creation. There is no difference between Action and ActionShellExec on UNIX platforms. Parameters to the action can be provided from the server. They can be accessed as $1, $2… variables.
#ActionShellExec=

# The registered name of application with built in subagent library that can be as subagent by agent.
#AppAgent=

# Enable (yes) or disable (no) automatic start of User Support Application (Windows only). If enabled, Agent will check on it’s start, if User Support Application is running in each user session and will start it if needed. For this to work, Agent should be started under local SYSTEM user.
#AutoStartUserAgent=


# Enable (yes) or disable (no) log writer as separate background thread. Has no effect if logging is done through syslog or Windows Event Log.
#BackgroundLogWriter=


# Code page used by NetXMS agent. Has no effect on Windows or if agent was compiled without iconv support.
#CodePage=

# Folder containing additional configuration files. This parameter can only be specified in master configuration file and will be ignored if found in additional configuration files or configuration policy.
#ConfigIncludeDir=

# A list of management servers, which can execute actions on agent and change agent’s config. Hosts listed in this parameter also have read access to the agent. Both IP addresses and DNS names can be used. Multiple servers can be specified in one line, separated by commas. If this parameter is used more than once, servers listed in all occurrences will have access to agent.
#ControlServers=

# Directory where additional agent files (log file monitoring policy files, agent configuration policy files, user agent configuration, local agent database, etc) will be stored. This parameter can only be specified in master configuration file and will be ignored if found in additional configuration files or configuration policy.
#DataDirectory=

# Log file name suffix used when LogRotationMode is set to 1 (daily), can contain strftime(3C) macros
#DailyLogFileSuffix=

# Set agent debug logging level (0 - 9). Value of 0 turns off debugging, 9 enables very detailed logging. Can also be set with command line “-D<level>” option.
#DebugLevel

# Set agent debug logging level (0 - 9) for exact log tag or log tag mask. Value of 0 turns off debugging, 9 enables very detailed logging. Configuration should look like debugTag:logLevel (like db.conn:6). To configure multiple log tags, you should use multiple DebugTags parameters or write them coma separated (like proc.spexec:8,tunnel.*:4,db.conn:6).
#DebugTags=
#DebugTags=

# Disables (yes) or enables(no) IPv4 support.
#DisabeIPv4=


# Disables (yes) or enables(no) IPv6 support.
#DisabeIPv6=


# Enable (yes) or disable (no) action execution by agent.
#EnableActions=

# Not yet implemented. Enables server to run any shell command on the agent without specifying it as action in agent’s config file. Enabling this adds System.Execute action (and also System.ExecuteInAllSessions on Windows).
#EnableArbitraryCommandExecution=


# Controls what ciphers agent can use for connection encryption. A value for this parameter is a cipher code. To enable more than one cipher, the codes should be summed up.
# 	Possible cipher codes:
# 	1 - “AES-256”
# 	2 - “BLOWFISH-256”
# 	4 - “IDEA”
# 	8 - “3DES”
# 	16 - “AES-128”
# 	32 - “BLOWFISH-128”
# 	Example (enable AES-256 and IDEA):
# 	EnabledCiphers = 5
#EnabledCiphers=

# Enables named pipe used by the agent to receive shutdown and delayed restart commands. A command is sent by another instance of agent, launched with -k or -K parameter. Used on Windows during upgrade process.
#EnableControlConnector=

# Enable (yes) or disable (no) agent proxy functionality.
#EnableProxy=

# Enables named pipe / unix socket used by the agent to receive data sent by nxapush command line tool.
#EnablePushConnector=

# Enable (yes) or disable (no) SNMP proxy functionality.
#EnableSNMPProxy=

# Enable (yes) or disable (no) SNMP Trap proxy functionality.
#EnableSNMPTrapProxy=

# Enable (yes) or disable (no) additional debug messages from SSL library.
#EnableSSLTrace=

# Enable (yes) or disable (no) automatic loading of subagent(s) depending on the platform on which the agent is running.
#EnableSubagentAutoload=

# Enable (yes) or disable (no) Syslog proxy functionality.
#EnableSyslogProxy=

# Enable TCP proxy functionality that allows to forward TCP connections inside the connection between NetXMS server and agent. An example utility called TcpProxyApp that forwards local ports is provided.
#EnableTCPProxy=

# Enable (yes) or disable (no) automatic agent restart in case of unexpected shutdown.
#EnableWatchdog=

# Enable (yes) or disable (no) web service data collection proxy functionality.
#EnableWebServiceProxy=

# Timeout in milliseconds for external metric execution.
#ExecTimeout=

# Add list handled by external command. To add multiple parameters, you should use multiple``ExternalList`` entries.
#ExternalList=

# ID that is checked when external subagent connects to master agent. Should have same value as ExternalSubagent parameter in external subagent configuration file.
#ExternalMasterAgent=

# Adds metric handled by external command. To add multiple parameters, you should use multiple ExternalParameter entries. On Windows platform system process execution API’s CreateProcess() is used to run the command, it will search in PATH, but the command should be with file extension, e.g. command.exe.
#ExternalParameter=

# ExternalParameterShellExec has same meaning as ExternalParameter with exception that agent will use shell to execute specified command instead of system process execution API. This difference presented only on Windows system, on other systems ExternalParameter and ExternalParameterShellExec behaves identically.
#ExternalParameterShellExec=


# Adds list of metrics that are cached by the agent and returned to server per request. Metrics should be returned in metric=value format each pair in new line.
#ExternalParametersProvider=

#Timeout in seconds for external parameters provider execution
# ExternalParameterProviderTimeout=

#ID of external subagent. Should be same as ExternalMasterAgent in master agent configuration file.
# ExternalSubagent=

# Adds table metric handled by external command. To add multiple parameters, you should use multiple ExternalTable entries. See Agent External Metrics for more information.
#ExternalTable=
#ExternalTable=

# Directory to be used for storing files uploaded by management server(s). It’s value is set to environment variable NETXMS_FILE_STORE that is available to all processed launched by agent.
#FileStore=

# IP address that the agent should listen on. If 0.0.0.0 or * is specified as listen address, agent will listen on all available IP addresses.
#ListenAddress=

# TCP port to be used for incoming requests.
#ListenPort=


# Defines how many old log files should be kept after log rotation.
#LogHistorySize=

# Define log rotation mode. Possible values are:
# 	0 - No rotation;
# 	1 - Daily rotation (log will be rotated every midnight);
# 	2 - Rotation by size (log will be rotated when it’s size will exceed value defined by MaxLogSize parameter).
#LogRotationMode=


# If set to yes, all dynamically resolved symbols, which failed to be resolved, will be logged.
#LogUnresolvedSymbols=

# Expressed in milliseconds. If a query to agent’s local database or DBQuery subagent query takes longer then this time, the query will be logged to agent log file.
#LongRunningQueryThreshold=

# List of management servers, which have full access to agent. Hosts listed in this group can upload files to agent and initiate agent upgrade, as well as perform any task allowed for hosts listed in Servers and ControlServers. Both IP addresses and DNS names can be used. Multiple servers can be specified in one line, separated by commas. If this parameter is used more than once, servers listed in all occurrences will have access to agent.
#MasterServers=

# Maximum log size, in bytes. When log file reaches this limit, log rotation occurs. Use 0 to disable log rotation. This parameter supports (K, M, G, T suffixes).
#MaxLogSize=

# Maximum number of simultaneous communication sessions. Possible value can range from 2 to 1024.
#MaxSessions=

# Applicable only if Agent Cache Mode is on. Defines the duration (in days) for how collected data will be stored in agent’s database if there is no connection to NetXMS server.
#OfflineDataExpirationTime=

# String to be added as suffix to the value of System.PlatformName parameter.
#PlatformSuffix=

# If set to yes, a host connected to an agent has to provide correct shared secret before issuing any command.
#RequireAuthentication=

# If set to yes, a host connected to an agent will be forced to use encryption, and if encryption is not supported by a remote host, the connection will be dropped. If an agent was compiled without encryption support, this parameter has no effect.
#RequireEncryption=

# IP address or host name of NetXMS server for tunnel agent connection. Several such parameters can be present, in this case agent will establish tunnel connection to more then one server.
#ServerConnection=

# A list of management servers, which have read access to this agent. Both IP addresses and DNS names can be used. Multiple servers can be specified in one line, separated by commas. If this parameter is used more than once, servers listed in all occurrences will have access to agent.
#Servers=

# Communication session idle timeout in seconds. If an agent will not receive any command from peer within the specified timeout, session will be closed.
#SessionIdleTimeout=

# Agent’s shared secret used for remote peer authentication. If RequireAuthentication set to no, this parameter has no effect.
#SharedSecret=

# Agent’s shared secret used for remote peer authentication, encrypted using “nxencpasswd -a”. If RequireAuthentication set to no, this parameter has no effect.
#EncryptedSharedSecret=

# SNMP proxy thread pool size
#SNMPProxyThreadPoolSize=

# Timeout in milliseconds for SNMP requests sent by agent
#SNMPTimeout=

# Interface address which should be used by server to listen for incoming SNMP trap connections. Use value 0.0.0.0 or * to use all available interfaces.
#SNMPTrapListenAddress=

# Port that will be used to listen SNMP traps
#SNMPTrapPort=

# Number of seconds that agent should wait on startup before start servicing requests. This parameter can be used to prevent false reports about missing processes or failed services just after monitored system startup.
#StartupDelay=

# Subagent to load. To load multiple subagents, you should use multiple SubAgent parameters. Subagents will be loaded in the same order as they appear in configuration file.
#SubAgent=

# Listening port number for syslog proxy functionality.
#SyslogListenPort=

# If tunnel agent connection is used, the system appears in Agent Tunnel Manager under that name.
#SystemName=

# Interval (in seconds) between keepalive packets over tunnel agent connection.
#TunnelKeepaliveInterval=

# Name of User Support Application executable used by AutoStartUserAgent and UserAgentWatchdog parameters.
#UserAgentExecutable=

# Enable (yes) or disable (no) automatic restart of User Support Application (Windows only). If enabled, Agent will check once per minute, if User Support Application is running in each user session and will start it if needed. For this to work, Agent should be started under local SYSTEM user.
#UserAgentWatchdog=

# Username under which NetXMS agent is started (Unix only). See also GroupId parameter.
#UserId=

# GroupId under which NetXMS agent is started (Unix only). See also UserId parameter.
#GroupId=

# If specified, an agent will pause initialization until given process starts.
#WaitForProcess=

# Enable (yes) or disable (no) writing log file in JSON format.
#WriteLogAsJson=

# Allows to set agent’s zone explicitly. This can be useful when agent forwards syslog or SNMP traps of devices, that belong to a particular zone. Agent will include zone UIN along with the trap message that will allow correct matching of traps.
#ZoneUIN=
